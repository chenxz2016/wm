/* ************************************************************************
 *       Filename:  wmp_operations.h
 *    Description:  
 *        Version:  1.0
 *        Created:  2017年07月08日 10时13分30秒
 *       Revision:  none
 *       Compiler:  gcc
 *         Author:  YOUR NAME (), 
 *        Company:  
 * ************************************************************************/

#ifndef WMP_OPERATIONS_H_
#define WMP_OPERATIONS_H_

#include<stdint.h>

#ifdef __cplusplus_
extern "C"
{
#endif


typedef struct
{
	uint16_t index;
	uint8_t value_len;
	uint8_t value_type;
	uint8_t value[256];
}wmp_info_item_t;

typedef struct
{
	uint16_t info_num;
	wmp_info_item_t *items_list;
}wmp_add_op_info_t;

typedef struct
{
	uint8_t add_op_id;
	uint32_t src_id;
	uint32_t dst_id;
	wmp_add_op_info_t add_op_info;
}wmp_add_op_t;

typedef struct
{
	uint8_t del_op_id;
	uint32_t src_id;
	uint32_t dst_id;
}wmp_del_op_t;

typedef struct
{
	uint8_t mod_op_id;
	uint32_t src_id;
	uint32_t dst_id;
}wmp_mod_op_t;


typedef wmp_add_op_info_t wmp_srh_op_info_t

/* Search for pointed user_id. */
typedef struct
{
	uint32_t src_id;
	uint32_t dst_id;
	wmp_srh_op_info_t srh_op_info;
}wmp_srh_op_t;


typedef wmp_add_op_info_t wmp_cet_op_info_t
/* Create Group, Session and team. */
typedef struct
{
	uint32_t src_id;
	uint8_t id;
	wmp_cet_op_info_t cet_op_info;
}wmp_cet_op_t;

typedef wmp_add_op_info_t wmp_dsv_op_info_t
/* Dissolve Group, Session and team. */
typedef struct
{
	uint32_t src_id;
	uint8_t id;
	wmp_dsv_op_info_t dsv_op_info;
}wmp_dsv_op_t;





typedef struct
{
	uint16_t attr;
	uint16_t operations_id;
	uint8_t *operations;
}wmp_operations_t;

#define WMP_OP_MIN_LENGTH								sizeof(uint16_t)+sizeof(uint32_t)+sizeof(uint8_t)

#define WMP_OP_PTG										1 
#define WMP_OP_PTP										2
#define WMP_OP_PTS										3
#define WMP_OP_PTTS										4

#define WMP_OP_ADD_ID									0x0401
#define WMP_OP_DEL_ID									0x0402
#define WMP_OP_MOD_ID									0x0403
#define WMP_OP_SRH_ID									0x0404
#define WMP_OP_CET_ID									0x0405
#define WMP_OP_DSV_ID									0x0406
#define WMP_OP_JOI_ID									0x0407
#define WMP_OP_EXT_ID									0x0408


#define WMP_OpCrypt(p_wmp_op)							(p_wmp_op->attr & 1)
#define WMP_OpCRC32(p_wmp_op)							(p_wmp_op->attr & 2)
#define WMP_OpReqRsp(p_wmp_op)							(p_wmp_op->attr & 4)


#define WMP_OpAdd(p_wmp_op) 							((wmp_add_op_t *)(p_wmp_op->operations))
#define WMP_OpDel(p_wmp_op) 							((wmp_del_op_t *)(p_wmp_op->operations))
#define WMP_OpMod(p_wmp_op) 							((wmp_mod_op_t *)(p_wmp_op->operations))

#define WMP_OpSetCryptEnable(p_wmp_op)					(p_wmp_op->attr |= 1)
#define WMP_OpSetCryptDisable(p_wmp_op)					(p_wmp_op->attr &= ~(1 << 1))
#define WMP_OpSetCRC32Enable(p_wmp_op)					(p_wmp_op->attr |= 2)
#define WMP_OpSetCRC32Disable(p_wmp_op)					(p_wmp_op->attr &= ~(1 << 2))
#define WMP_OpReq(p_wmp_op)								(p_wmp_op->attr &= ~(type << 1))
#define WMP_OpRsp(p_wmp_op)								(p_wmp_op->attr |= (type << 2))
#define WMP_OpSetType(p_wmp_op,type) 					(p_wmp_op->attr |= (type << 2))

extern wmp_operations_t *allocate_wmp_operations();

extern void deallocate_wmp_operations(wmp_operations_t **p_wmp_op);

extern void set_wmp_add_operations_items(wmp_add_op_t *p_wmp_add_op, uint16_t num);

extern wmp_operations_t *parser_wmp_operations(const char *package,uint32_t pack_len);

extern uint32_t package_wmp_operations(char *package,wmp_operations_t *p_wmp_op);


#ifdef __cplusplus_
}
#endif

#endif
